# Traefik Dynamic Configuration - Middlewares

http:
  middlewares:
    # Security headers
    security-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Frame-Options: "SAMEORIGIN"
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"
          Referrer-Policy: "strict-origin-when-cross-origin"
          Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
    
    # Rate limiting
    rate-limit:
      rateLimit:
        burst: 100
        average: 50
        period: "1m"
    
    # Authentication
    basic-auth:
      basicAuth:
        users:
          - "admin:$2y$10$..."  # Replace with actual hash
    
    # IP whitelist
    ip-whitelist:
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
    
    # Compression
    compression:
      compress: {}
    
    # Circuit breaker
    circuit-breaker:
      circuitBreaker:
        expression: "NetworkErrorRatio() > 0.3"
        checkPeriod: "3s"
        fallbackDuration: "10s"
        recoveryDuration: "10s"
    
    # Retry
    retry:
      retry:
        attempts: 3
        initialInterval: "100ms"

  # Services for load balancing
  services:
    # Example service with multiple backends
    example-service:
      loadBalancer:
        servers:
          - url: "http://example-1:8080"
          - url: "http://example-2:8080"
        healthCheck:
          path: "/health"
          interval: "30s"
          timeout: "5s"
    
    # Weighted services
    canary-service:
      weighted:
        services:
          - name: "stable-service"
            weight: 90
          - name: "canary-service"
            weight: 10

  # Routers
  routers:
    # API router with middleware chain
    api-router:
      rule: "Host(`api.yourdomain.com`) && PathPrefix(`/api`)"
      service: "example-service"
      middlewares:
        - "security-headers"
        - "rate-limit"
        - "compression"
        - "circuit-breaker"
      tls:
        certResolver: "letsencrypt"
